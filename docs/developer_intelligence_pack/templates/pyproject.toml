[tool.poetry]
name = "nexus-framework"
version = "2.3.0"
description = "A world-class, modular, scalable multi-agent engineering mega-system"
authors = ["Rick1330 <elishum8@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/Rick1330/Nexus-Framework"
documentation = "https://github.com/Rick1330/Nexus-Framework/docs"
keywords = ["ai", "agents", "multi-agent", "orchestration", "llm"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.0.0"
fastapi = "^0.100.0"
uvicorn = "^0.22.0"
langchain = "^0.0.267"
langchain-core = "^0.0.10"
langgraph = "^0.0.15"
openai = "^1.0.0"
anthropic = "^0.5.0"
redis = "^5.0.0"
sqlalchemy = "^2.0.0"
alembic = "^1.11.0"
psycopg2-binary = "^2.9.6"
faiss-cpu = "^1.7.4"
chromadb = "^0.4.15"
sentence-transformers = "^2.2.2"
typer = "^0.9.0"
rich = "^13.4.0"
pyyaml = "^6.0.0"
python-dotenv = "^1.0.0"
httpx = "^0.24.1"
jinja2 = "^3.1.2"
prometheus-client = "^0.17.0"
opentelemetry-api = "^1.18.0"
opentelemetry-sdk = "^1.18.0"
opentelemetry-exporter-otlp = "^1.18.0"
pyjwt = "^2.7.0"
cryptography = "^41.0.0"
python-multipart = "^0.0.6"
metagpt = "^0.5.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.3.0"
isort = "^5.12.0"
mypy = "^1.3.0"
ruff = "^0.0.270"
pre-commit = "^3.3.2"
pytest-mock = "^3.10.0"
pytest-xdist = "^3.3.1"
hypothesis = "^6.80.0"
faker = "^18.10.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.3"
mkdocs-material = "^9.1.15"
mkdocstrings = "^0.22.0"
mkdocstrings-python = "^1.1.0"
mkdocs-gen-files = "^0.5.0"
mkdocs-literate-nav = "^0.6.0"
mkdocs-section-index = "^0.3.5"

[tool.poetry.scripts]
nexus = "nexus.cli.main:app"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[tool.ruff]
line-length = 88
target-version = "py310"
select = ["E", "F", "B", "I", "N", "UP", "ANN", "S", "A", "C4", "T20", "PT", "RET", "SIM"]
ignore = ["ANN101", "ANN102", "ANN401"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
asyncio_mode = "auto"
